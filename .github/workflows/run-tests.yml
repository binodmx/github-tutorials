name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-carbon-apimgt:
    name: Build carbon-apimgt
    runs-on: ubuntu-latest
    outputs:
      carbon-apimgt-version: ${{ steps.set-carbon-apimgt-version.outputs.carbon-apimgt-version }}
    steps:
      - name: Set hostname
        run: sudo echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
      - name: Checkout carbon-apimgt
        uses: actions/checkout@v3
        with:
          repository: wso2/carbon-apimgt
          ref: refs/heads/master
          fetch-depth: '10'
          path: carbon-apimgt
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11.0.16+8
          distribution: 'temurin'
      - name: Set up Nodejs 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2
      - name: Build carbon-apimgt with tests, skipping AspectJ
        run: mvn clean install --file carbon-apimgt/pom.xml -Dskip.aspectj=true
      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unit_tests
      - name: Set carbon.apimgt.version
        id: set-carbon-apimgt-version
        run: echo "carbon-apimgt-version=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`" >> $GITHUB_OUTPUT
  build-product-apim:
    name: Build product-apim
    runs-on: ubuntu-latest
    outputs:
      product-apim-version: ${{ steps.set-product-apim-version.outputs.product-apim-version }}
    needs: build-carbon-apimgt
    steps:
      - name: Set hostname
        run: sudo echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
      - name: Checkout product-apim
        uses: actions/checkout@v3
        with:
          repository: wso2/product-apim
          ref: refs/heads/master
          fetch-depth: '10'
          path: product-apim
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11.0.16+8
          distribution: 'temurin'
      - name: Set up Nodejs 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2
      - name: Build product-apim without tests
        run: mvn clean install -Dcarbon.apimgt.version=${{needs.build-carbon-apimgt.outputs.carbon-apimgt-version}} --file product-apim/pom.xml -Dmaven.test.skip=true
      - name: Set product.apim.version
        id: set-product-apim-version
        run: echo "product-apim-version=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`" >> $GITHUB_OUTPUT
      - name: Upload wso2am zip
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: product-apim/modules/distribution/product/target/wso2am-${{ steps.set-product-apim-version.outputs.product-apim-version }}.zip
  run-integration-tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs: build-product-apim
    steps:
      - name: Set hostname
        run: sudo echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          repository: wso2/product-apim
          ref: refs/heads/master
          fetch-depth: '10'
          path: product-apim
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11.0.16+8
          distribution: 'temurin'
      - name: Set up Nodejs 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Download wso2am zip
        uses: actions/download-artifact@v2
        with:
          name: wso2am-${{ needs.build-product-apim.outputs.product-apim-version }}.zip
      - name: Build product-apim with tests
        run: |
          mkdir product-apim/modules/distribution/product/target
          cp wso2am-${{ needs.build-product-apim.outputs.product-apim-version }}.zip product-apim/modules/distribution/product/target/
          mvn clean install -Dcarbon.apimgt.version=${{needs.build-carbon-apimgt.outputs.carbon-apimgt-version}} --file product-apim/modules/integration/tests-integration/pom.xml -fae
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: integration_tests
  run-ui-test:
    name: Run ui tests
    runs-on: ubuntu-latest
    needs: build-product-apim
    steps:
      - name: Set hostname
        run: sudo echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
      - name: Checkout apim-apps
        uses: actions/checkout@v3
        with:
          repository: wso2/apim-apps
          ref: refs/heads/main
          fetch-depth: '10'
          path: apim-apps
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11.0.16+8
          distribution: 'temurin'
      - name: Set up Nodejs 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Build apim-apps
        run: mvn clean install --file apim-apps/pom.xml
      - name: Get apim.apps.version
        run: mvn help:evaluate -Dexpression=project.version -q --file apim-apps/pom.xml -DforceStdout > ../APIM_APPS_VERSION_FILE
      - uses: actions/download-artifact@v2
        with:
          name: wso2am-${{ needs.build-product-apim.outputs.product-apim-version }}.zip
      - name: Start API Manager
        run: |
            unzip wso2am-${{ needs.build-product-apim.outputs.product-apim-version }}.zip
            printf "\n[apim.devportal]\nenable_application_sharing = true\napplication_sharing_type = \"default\"\n" >> wso2am-${{ needs.build-product-apim.outputs.product-apim-version }}/repository/conf/deployment.toml
            sh wso2am-${{ needs.build-product-apim.outputs.product-apim-version }}/bin/api-manager.sh start
            sleep 5m
            nc -zv localhost 9443
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          record: false
          working-directory: 'apim-apps/tests'
          spec: '**/*.spec.js'
      - name: Upload ScreenShots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: apim-apps/tests/cypress/screenshots
      - name: Upload videos
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: apim-apps/tests/cypress/videos
      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: server-logs
          path: wso2am-*/repository/logs
